DROP TABLE CUSTOMER CASCADE CONSTRAINTS;
DROP TABLE ORDERS CASCADE CONSTRAINTS;
DROP TABLE PAYMENT CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE PROMOTION CASCADE CONSTRAINTS;
DROP TABLE SUPPLIER CASCADE CONSTRAINTS;
DROP TABLE STORES CASCADE CONSTRAINTS;
DROP TABLE DEPARTMENT CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE ORDER_LINE CASCADE CONSTRAINTS;
DROP TABLE PRODUCT_HISTORY CASCADE CONSTRAINTS;
DROP TABLE PROD_PROM CASCADE CONSTRAINTS;
DROP TABLE PROD_SUPPLIER CASCADE CONSTRAINTS;
DROP TABLE PAYCHECK CASCADE CONSTRAINTS;
DROP TABLE SALARY_HISTORY CASCADE CONSTRAINTS;


CREATE TABLE CUSTOMER(
    CUST_ID INT PRIMARY KEY,
    CUST_F_NAME VARCHAR(25),
    CUST_L_NAME VARCHAR(25),
    CUST_ADDRESS_LINE VARCHAR(100),
    CUST_CITY VARCHAR(25),
    CUST_STATE VARCHAR(2),
    CUST_ZIP VARCHAR(11),
    CUST_PHONE VARCHAR(50),
    CUST_EMAIL VARCHAR(150)
);

CREATE TABLE ORDERS(
    ORDER_ID INT PRIMARY KEY,
    CUST_ID INT,
    ORDER_DATE DATE,
    ORDER_TOTAL NUMBER(10, 2),
    ORDER_STATUS VARCHAR(50),
    ORDER_REFUND_DATE DATE,
    FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER (CUST_ID)
);

CREATE TABLE PAYMENT(
    PAYMENT_ID INT PRIMARY KEY,
    CUST_ID INT,
    PAYMENT_TYPE VARCHAR(25),
    PAYMENT_CARD_NUM VARCHAR(25),
    PAYMENT_DATE VARCHAR(10),
    PAYMENT_TOTAL DECIMAL(15, 2),
    PAYMENT_STATUS VARCHAR(25),
    FOREIGN KEY (CUST_ID) REFERENCES CUSTOMER (CUST_ID)
);

CREATE TABLE PRODUCT(
    UPC INT PRIMARY KEY,
    PRODUCT_NAME VARCHAR(25),
    PRODUCT_MATERIAL VARCHAR(25),
    PRODUCT_AMT NUMBER,
    PRODUCT_UNIT_PRICE VARCHAR(25),
    PRODUCT_THRESHOLD NUMBER
);

CREATE TABLE PROMOTION(
    PROMOTION_ID INT PRIMARY KEY,
    PROMOTION_EXPIRATION DATE,
    PROMOTION_AMOUNT DECIMAL(15,2)
);

CREATE TABLE SUPPLIER(
    SUPPLIER_ID INT PRIMARY KEY,
    SUPPLIER_NAME VARCHAR(25),
    SUPPLIER_RQSTD_DATE DATE,
    SUPPLIER_DELIVERY_DATE DATE,
    SUPPLIER_ORDER_STATUS VARCHAR(20)

);

CREATE TABLE STORES(
    STORE_ID INT PRIMARY KEY,
    SUPPLIER_ID INT,
    STORE_NAME VARCHAR(25),
    STORE_ADDRESS_LINE VARCHAR(100),
    STORE_CITY VARCHAR(25),
    STORE_STATE VARCHAR(2),
    STORE_ZIP VARCHAR(11),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER (SUPPLIER_ID)

);

CREATE TABLE DEPARTMENT(
    DEPT_CODE INT PRIMARY KEY,
    STORE_ID INT,
    DEPT_NAME VARCHAR(25),
    FOREIGN KEY (STORE_ID) REFERENCES STORES (STORE_ID)

);

CREATE TABLE EMPLOYEE(
    EMPLOYEE_SSN INT PRIMARY KEY,
    DEPT_CODE INT,
    EMPLOYEE_F_NAME VARCHAR(25),
    EMPLOYEE_L_NAME VARCHAR(25),
    EMPLOYEE_HOUR_RATE DECIMAL(15, 2),
    EMPLOYEE_HOUR_WORKED DECIMAL(15, 2),
    EMPLOYEE_DOB VARCHAR(15),
    EMPLOYEE_PHONE VARCHAR(15),
    EMPLOYEE_ADDRESS_LINE VARCHAR(100),
    EMPLOYEE_CITY VARCHAR(25),
    EMPLOYEE_STATE VARCHAR(2),
    EMPLOYEE_ZIP VARCHAR(11),
    FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT (DEPT_CODE)
);

CREATE TABLE ORDER_LINE(
    UPC INT,
    ORDER_ID INT,
    QUANTITY INT,
    PRICE_PER_ITEM DECIMAL(15, 2),
    PRIMARY KEY (UPC, ORDER_ID),
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID),
    FOREIGN KEY (UPC) REFERENCES PRODUCT (UPC)
);

CREATE TABLE PRODUCT_HISTORY(
    UPC INT,
    PROD_PRICE_DATE DATE,
    PROD_PRICE_CHANGE_DATE DATE,
    PROD_PRICE DECIMAL(15,2),
    PRIMARY KEY (UPC, PROD_PRICE_DATE),
    FOREIGN KEY (UPC) REFERENCES PRODUCT (UPC)
);

CREATE TABLE PROD_PROM(
    UPC INT,
    PROMOTION_ID INT,
    PRIMARY KEY (UPC, PROMOTION_ID),
    FOREIGN KEY (UPC) REFERENCES PRODUCT (UPC),
    FOREIGN KEY (PROMOTION_ID) REFERENCES PROMOTION (PROMOTION_ID)
);

CREATE TABLE PROD_SUPPLIER(
    UPC INT,
    SUPPLIER_ID INT,
    PRIMARY KEY (UPC, SUPPLIER_ID),
    FOREIGN KEY (UPC) REFERENCES PRODUCT (UPC),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER (SUPPLIER_ID)
);


CREATE TABLE PAYCHECK(
    PAYCHECK_ID INT PRIMARY KEY,
    EMPLOYEE_SSN INT,
    PAYCHECK_AMOUNT DECIMAL(15,2),
    PAYCHECK_DATE DATE,
    FOREIGN KEY (EMPLOYEE_SSN) REFERENCES EMPLOYEE (EMPLOYEE_SSN)
);

CREATE TABLE SALARY_HISTORY(
    EMPLOYEE_SSN INT PRIMARY KEY,
    SALARY_START_DATE DATE,
    SALARY_END_DATE DATE,
    SALARY_AMOUNT DECIMAL(15,2),
    FOREIGN KEY (EMPLOYEE_SSN) REFERENCES EMPLOYEE (EMPLOYEE_SSN)

);
